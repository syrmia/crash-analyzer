# void g(int* px)
#{
#    *px = 2;
#}
#
# void f()
# {
#    long x1 = 2;
#    long x2 = 2;
#    long y = 3;
#    long z = 4;
#
#    long x3 = 20;
#    long y3 = 30;
#    long z3 = 10;
#
#    int *px = nullptr;
#
#    __asm__(
#        "lea %0, %%rax;"
#        "movq %%rax, %%rbx;"
#        "movq $10, 0(%%rax);"
#        "movq %%rbx, %1;"
#        :"=m" (x1), "=m" (y)
#        :"0" (x1), "1" (y)
#    );
#
#    __asm__(
#        "lea %0, %%rax;"
#        "movq %%rax, %1;"
#        "movq $11, 0(%%rax);"
#        :"=m" (x2), "=m" (z)
#        :"0" (x2), "1" (z)
#    );
#
#    __asm__(
#        "lea %0, %%rax;"
#        "movq %%rax, %%rbx;"
#        "movq 0(%%rax), %%rax;"
#        "movq %%rbx, %1;"
#        "movq %%rax, %2;"
#        :"=m" (x3), "=m" (y3), "=m" (z3)
#        :"0" (x3), "1" (y3), "2" (z3)
#    );
#
#    g(px);
#}
#
# int main()
# {   
#   f();
#    return 0;
# }

# RUN: %llvm-crash-analyzer --core-file=%S/Inputs/core.reg-eq-in-rev-exec \
# RUN: %S/Inputs/reg-eq-in-rev-exec --print-potential-crash-cause-loc \
# RUN: --debug-only=mem-wrapper 2>&1 | FileCheck %s

# CHECK: Writing location: 0x00007ffe5f8146a8 : 0x0000000000000014, byte_size: 8
# CHECK-NEXT: 	Valid location: 0x00007ffe5f8146a8, byte_size: 1, Val: 0x14
# CHECK: Addressing valid location: 0x00007ffe5f8146b0 : 0x00007ffe5f8146c0, byte_size: 8
# CHECK-NEXT: Addressing valid location: 0x00007ffe5f8146c0 : 0x000000000000000b, byte_size: 8
# CHECK: Invalidating location: 0x00007ffe5f8146c0, byte_size: 8
# CHECK: Addressing valid location: 0x00007ffe5f8146c8 : 0x000000000000000a, byte_size: 8
# CHECK: Blame Function is f()
# CHECK-NEXT: From File {{.*}}:17:10
